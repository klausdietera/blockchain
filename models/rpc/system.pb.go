// Code generated by protoc-gen-go. DO NOT EDIT.
// source: system.proto

package rpc

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type SystemInfoRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SystemInfoRequest) Reset()         { *m = SystemInfoRequest{} }
func (m *SystemInfoRequest) String() string { return proto.CompactTextString(m) }
func (*SystemInfoRequest) ProtoMessage()    {}
func (*SystemInfoRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_86a7260ebdc12f47, []int{0}
}

func (m *SystemInfoRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SystemInfoRequest.Unmarshal(m, b)
}
func (m *SystemInfoRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SystemInfoRequest.Marshal(b, m, deterministic)
}
func (m *SystemInfoRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SystemInfoRequest.Merge(m, src)
}
func (m *SystemInfoRequest) XXX_Size() int {
	return xxx_messageInfo_SystemInfoRequest.Size(m)
}
func (m *SystemInfoRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SystemInfoRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SystemInfoRequest proto.InternalMessageInfo

type SystemInfoReply struct {
	IP                   string   `protobuf:"bytes,1,opt,name=IP,proto3" json:"IP,omitempty"`
	Port                 int32    `protobuf:"varint,2,opt,name=port,proto3" json:"port,omitempty"`
	Heigth               uint64   `protobuf:"varint,3,opt,name=heigth,proto3" json:"heigth,omitempty"`
	OS                   string   `protobuf:"bytes,4,opt,name=OS,proto3" json:"OS,omitempty"`
	Version              string   `protobuf:"bytes,5,opt,name=version,proto3" json:"version,omitempty"`
	Clock                string   `protobuf:"bytes,6,opt,name=clock,proto3" json:"clock,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SystemInfoReply) Reset()         { *m = SystemInfoReply{} }
func (m *SystemInfoReply) String() string { return proto.CompactTextString(m) }
func (*SystemInfoReply) ProtoMessage()    {}
func (*SystemInfoReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_86a7260ebdc12f47, []int{1}
}

func (m *SystemInfoReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SystemInfoReply.Unmarshal(m, b)
}
func (m *SystemInfoReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SystemInfoReply.Marshal(b, m, deterministic)
}
func (m *SystemInfoReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SystemInfoReply.Merge(m, src)
}
func (m *SystemInfoReply) XXX_Size() int {
	return xxx_messageInfo_SystemInfoReply.Size(m)
}
func (m *SystemInfoReply) XXX_DiscardUnknown() {
	xxx_messageInfo_SystemInfoReply.DiscardUnknown(m)
}

var xxx_messageInfo_SystemInfoReply proto.InternalMessageInfo

func (m *SystemInfoReply) GetIP() string {
	if m != nil {
		return m.IP
	}
	return ""
}

func (m *SystemInfoReply) GetPort() int32 {
	if m != nil {
		return m.Port
	}
	return 0
}

func (m *SystemInfoReply) GetHeigth() uint64 {
	if m != nil {
		return m.Heigth
	}
	return 0
}

func (m *SystemInfoReply) GetOS() string {
	if m != nil {
		return m.OS
	}
	return ""
}

func (m *SystemInfoReply) GetVersion() string {
	if m != nil {
		return m.Version
	}
	return ""
}

func (m *SystemInfoReply) GetClock() string {
	if m != nil {
		return m.Clock
	}
	return ""
}

func init() {
	proto.RegisterType((*SystemInfoRequest)(nil), "rpc.SystemInfoRequest")
	proto.RegisterType((*SystemInfoReply)(nil), "rpc.SystemInfoReply")
}

func init() { proto.RegisterFile("system.proto", fileDescriptor_86a7260ebdc12f47) }

var fileDescriptor_86a7260ebdc12f47 = []byte{
	// 235 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x64, 0x90, 0xcf, 0x4a, 0xc4, 0x30,
	0x10, 0xc6, 0x4d, 0xb7, 0xad, 0x38, 0xf8, 0x07, 0xc7, 0x65, 0x8d, 0x9e, 0x4a, 0x4f, 0x3d, 0xe5,
	0xa0, 0xe0, 0x55, 0xe8, 0x45, 0x7a, 0x90, 0x2d, 0xed, 0x13, 0xb8, 0x21, 0x6e, 0x83, 0xb5, 0x89,
	0x49, 0x14, 0xfa, 0x10, 0xbe, 0xb3, 0x24, 0x71, 0xd9, 0x85, 0xbd, 0xe5, 0xfb, 0x85, 0x6f, 0x98,
	0xf9, 0xc1, 0xb9, 0x9d, 0xad, 0x13, 0x9f, 0x4c, 0x1b, 0xe5, 0x14, 0x2e, 0x8c, 0xe6, 0xe5, 0x0d,
	0x5c, 0xf7, 0x01, 0x36, 0xd3, 0xbb, 0xea, 0xc4, 0xd7, 0xb7, 0xb0, 0xae, 0xfc, 0x25, 0x70, 0x75,
	0x48, 0xf5, 0x38, 0xe3, 0x25, 0x24, 0x4d, 0x4b, 0x49, 0x41, 0xaa, 0xb3, 0x2e, 0x69, 0x5a, 0x44,
	0x48, 0xb5, 0x32, 0x8e, 0x26, 0x05, 0xa9, 0xb2, 0x2e, 0xbc, 0x71, 0x05, 0xf9, 0x20, 0xe4, 0xd6,
	0x0d, 0x74, 0x51, 0x90, 0x2a, 0xed, 0xfe, 0x93, 0xef, 0xae, 0x7b, 0x9a, 0xc6, 0xee, 0xba, 0x47,
	0x0a, 0xa7, 0x3f, 0xc2, 0x58, 0xa9, 0x26, 0x9a, 0x05, 0xb8, 0x8b, 0xb8, 0x84, 0x8c, 0x8f, 0x8a,
	0x7f, 0xd0, 0x3c, 0xf0, 0x18, 0x1e, 0x5e, 0x01, 0xf6, 0xeb, 0xe0, 0x33, 0x5c, 0xbc, 0x08, 0x77,
	0x00, 0x56, 0xcc, 0x68, 0xce, 0x8e, 0xce, 0xb8, 0x5f, 0x1e, 0x71, 0x3d, 0xce, 0xe5, 0x49, 0xfd,
	0x04, 0x77, 0x52, 0xb1, 0xad, 0xff, 0xdc, 0xf8, 0xf9, 0x7c, 0x78, 0x93, 0x13, 0x8b, 0x6e, 0xea,
	0xdb, 0x7a, 0x8f, 0x62, 0x95, 0xb5, 0x5e, 0x57, 0x4b, 0x36, 0x79, 0xf0, 0xf6, 0xf8, 0x17, 0x00,
	0x00, 0xff, 0xff, 0xf9, 0xc3, 0xe9, 0xf5, 0x47, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// SystemInfoClient is the client API for SystemInfo service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type SystemInfoClient interface {
	GetSystemInfo(ctx context.Context, in *SystemInfoRequest, opts ...grpc.CallOption) (*SystemInfoReply, error)
}

type systemInfoClient struct {
	cc *grpc.ClientConn
}

func NewSystemInfoClient(cc *grpc.ClientConn) SystemInfoClient {
	return &systemInfoClient{cc}
}

func (c *systemInfoClient) GetSystemInfo(ctx context.Context, in *SystemInfoRequest, opts ...grpc.CallOption) (*SystemInfoReply, error) {
	out := new(SystemInfoReply)
	err := c.cc.Invoke(ctx, "/rpc.SystemInfo/GetSystemInfo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// SystemInfoServer is the server API for SystemInfo service.
type SystemInfoServer interface {
	GetSystemInfo(context.Context, *SystemInfoRequest) (*SystemInfoReply, error)
}

// UnimplementedSystemInfoServer can be embedded to have forward compatible implementations.
type UnimplementedSystemInfoServer struct {
}

func (*UnimplementedSystemInfoServer) GetSystemInfo(ctx context.Context, req *SystemInfoRequest) (*SystemInfoReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetSystemInfo not implemented")
}

func RegisterSystemInfoServer(s *grpc.Server, srv SystemInfoServer) {
	s.RegisterService(&_SystemInfo_serviceDesc, srv)
}

func _SystemInfo_GetSystemInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SystemInfoRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SystemInfoServer).GetSystemInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpc.SystemInfo/GetSystemInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SystemInfoServer).GetSystemInfo(ctx, req.(*SystemInfoRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _SystemInfo_serviceDesc = grpc.ServiceDesc{
	ServiceName: "rpc.SystemInfo",
	HandlerType: (*SystemInfoServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetSystemInfo",
			Handler:    _SystemInfo_GetSystemInfo_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "system.proto",
}
